<!DOCTYPE html>
<html>
    <head>
        <!--[if lte IE 9]>
        <script type="text/javascript">
            window.location = "/browser-compatibility";
        </script>
        <![endif]-->
        <title>{{meta_title}}</title>
        {{ghost_head}}
        {{> meta}}

        {{!-- LoadCSS Script --}}
        <script>
        /*!
        loadCSS: load a CSS file asynchronously.
        [c]2014 @scottjehl, Filament Group, Inc.
        Licensed MIT

        Ref: https://github.com/filamentgroup/loadCSS
        
        */

        /* exported loadCSS */
        function loadCSS( href, before, media, callback ){
            "use strict";
            // Arguments explained:
            // `href` is the URL for your CSS file.
            // `before` optionally defines the element we'll use as a reference for injecting our <link>
            // By default, `before` uses the first <script> element in the page.
            // However, since the order in which stylesheets are referenced matters, you might need a more specific location in your document.
            // If so, pass a different reference element to the `before` argument and it'll insert before that instead
            // note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/
            var ss = window.document.createElement( "link" );
            var ref = before || window.document.getElementsByTagName( "script" )[ 0 ];
            var sheets = window.document.styleSheets;
            ss.rel = "stylesheet";
            ss.href = href;
            // temporarily, set media to something non-matching to ensure it'll fetch without blocking render
            ss.media = "only x";
            // DEPRECATED
            if( callback ) {
                ss.onload = callback;
            }
            // inject link
            ref.parentNode.insertBefore( ss, ref );
            // This function sets the link's media back to `all` so that the stylesheet applies once it loads
            // It is designed to poll until document.styleSheets includes the new sheet.
            ss.onloadcssdefined = function( cb ){
                var defined;
                for( var i = 0; i < sheets.length; i++ ){
                    if( sheets[ i ].href && sheets[ i ].href === ss.href ){
                        defined = true;
                    }
                }
                if( defined ){
                    cb();
                } else {
                    setTimeout(function() {
                        ss.onloadcssdefined( cb );
                    });
                }
            };
            ss.onloadcssdefined(function() {
                ss.media = media || "all";
            });
            return ss;
        }

        // parse stylesheet path here
        loadCSS('{{asset "css/caffeine-theme.css"}}');
        </script>

        {{!-- Fallback method if browser Javascript is disabled --}}
        <noscript>
            <link rel="stylesheet" type="text/css" href="{{asset "css/caffeine-theme.css"}}" />
        </noscript>

        {{> head-css}}
        {{> headscript}}
    </head>
    <body class="{{body_class}}">
        {{> header}}
        {{> aside}}
        <main class="animated">
            <section class="content">
                {{{body}}}
                {{> footer}}
            </section>
        </main>
        {{> tags-overlay}}
        {{ghost_foot}}
        <script src="{{asset "js/caffeine-theme.js"}}" type="text/javascript" charset="utf-8"></script>
        {{> google-analytics}}
        {{> disqus-comment-count}}
    </body>
</html>
